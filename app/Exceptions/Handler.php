<?php

namespace App\Exceptions;

use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Facades\Log;
use Throwable;
use Exception;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    protected  $dontReport = [
//        DuplicateUserException::class
    ];

    /**
     * Register the exception handling callbacks for the application.
     */

    public function render($request, Throwable $e)
    {

//        jsonで要請が入り、Eloquent　Queryで検索されるデータがなかったらエラーを返します。
        if ($e instanceof ModelNotFoundException && $request->wantsJson()) {
            return response()->json([
                'message' => 'Resource not found',
                'error_code' => 'M001'
            ], 400);
        }


        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }

    public function report(Throwable $e)
    {
//        $exception->report($e);
//        parent::report($e);

        if ($e instanceof Exception) {
            Log::error('Exception Occured - code: ' . $e->getCode());
            Log::error('Exception Occured - message: ' . $e->getMessage());
        }
    }

    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
}
